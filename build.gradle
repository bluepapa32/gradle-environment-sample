defaultTasks 'clean', 'build'

apply plugin: 'java'

if (!hasProperty('env')) {
    env = System.env['GRADLE_ENV'] ?: 'development' 
}

{ ->
    def slurper = new ConfigSlurper()
    slurper.binding = project.properties

    def files = files("environment/default.gradle",
                      "environment/${env}.gradle",
                      "${System.properties['user.home']}/.gradle/environment.gradle")

    def config = files.inject(new ConfigObject()) { config, file ->
        file.exists() ? config.merge(slurper.parse(file.toURL())) : config
    }
    
    config.each { k, v -> setProperty k, v }
}()

ant.condition(property: "os", value: "windows") { os(family: "windows") }
ant.condition(property: "os", value: "unix"   ) { os(family: "unix")    }

files(
    "gradle/${ant.properties['os']}.gradle",
    "gradle/common.gradle",
    "gradle/${env}.gradle",
    "${System.properties['user.home']}/.gradle/build.gradle"
).each { file ->
    if (file.exists()) apply from: file
}

processResources {
    expand (project.properties)
}

build << {
    cat "${sourceSets.main.classesDir}/Application.properties"
}

